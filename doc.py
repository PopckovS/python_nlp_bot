"""

Создаем GIT Репозиторий
    echo "# python_nlp_bot" >> README.md
    git init
    git add README.md
    git commit -m "first commit"
    git branch -M master
    git remote add origin https://github.com/PopckovS/python_nlp_bot.git
    git push -u origin master


Установка NLTK
    pip3 install nltk
    import nltk


Создание виртуального окружения в Python.
Установка модуля для создания виртуального окружения:
    pip3 install virtualenv
Заходим в проект и создаем вирртуальное окужение следующей командой:
    virtualenv env
    python3 -m venv env
Из CLI запускаем скрипт, который переведет CLI в режим работы в вирт окружении:
    source env/bin/activate


"""

"""
Алгоритмы класификации текство, то как сравнивать фразы.

1)
Возвращает значение от 0 до 1 в зависимости от этого и определяется
равны фразы др.другу или нет.
    similarity("как тебя зовут?", "скажи свое имя") = ?    ОТВЕТ = 0.99
    similarity("как тебя зовут?", "сколько тебе лет") = ?  ОТВЕТ = 0.40

2)
Простые методы, это поиск по ключевым словам.
Есть реализация в NLTK.

3)
Растояние Левенштейна

                    ЛУЧШИЙ СПОСОБ(ЛУЧШИЙ АЛГОРИТМ):
Перевод слов фразы в числа, и построение векторов, это называется векторизацией.
И результат этой векторихзации и подают на вход, машинному обучению.
    МО - Задачи: 
         Классификация - Даны обьекты примеры текстов, и соответствующие им классы/intent
            Требуется построить алгоритм, который будет соотносить новые обьекты к их intent/классу.
            К примеру у нас есть некий DataSet в котором и хранятся наши intent, мы строим их них систему векторов
            Далее когда к нам приходит новая фраза, которой нету в DataSet, из той фразы строится Векторизация,
            и сравнивается с тем что уже есть в нашем DataSet, и выбирается нужный вариант. 
    
            Немного математики:
            X - множество обьектов (Введенный текст)
            Y - множество классов  (Наши intent)
            Суть машинного обучения, это имитация некой функции, к примеру такой:
                                        a(x) = y
            Берем некую обучающую выборку:
            где x - текст y - намерение к которому относится текст
            [ (X1,Y1), (X1,Y1), (X1,Y1) ... (Xn,Yn) ]         
                               
        Классификация намерений:
            У нас есть разные намерения, каждому из которых соответствует разная формулировка.
            Надо выбрать конкретный смысл из текста, и привести его к конкретному классу/intent. 
                
        Векторное представление текста:
            vectorize("откуда вы узнали мой номер ?")
            Надо упаковать эту фразу в числовое представление
            [0.9022, 0.0., 0.1102 ... 0.8214]
    
        МЕТОД: Мешок слов
        Самый простой способ векторизации, это count vectorize тоесть векторизация по количеству слов.
            Составляем огромный словарь всех слов, которые есть во всех наших предложениях.
            Получаем большой список, и ставим количество раз которо это слово встречается в предложении.
            
"""

"""
scikit-learn как главный ресурс для изучения Машинного Обучения

ЧТО БУДЕМ ДЕЛАТЬ ДАЛЕЕ:
    Возьмем и векторизуем как описано выше, наш DataSet, превратим наши фразы в вектора
    И подадим эти вектора на вход Машинному обучению.
"""














